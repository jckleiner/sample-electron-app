import {
  BrowserWindow, Tray, app
} from 'electron'

// This allows TypeScript to pick up the magic constant that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string

let tray!: Tray
export const createTrayWindow = () => {
  tray = new Tray('./src/electron/icon.png')
  const trayBounds = tray.getBounds()
  let trayWindow = new BrowserWindow({
    width: 500,
    height: 600,
    frame: false,
    resizable: false,
    transparent: true,
    show: false,
    movable: false,
    minimizable: false,
    alwaysOnTop: true,
    skipTaskbar: true,
    maximizable: false,
    webPreferences: {
      backgroundThrottling: false,
      nodeIntegration: true
      // preload: path.join(__dirname, 'preload.js')
    }
  })
  trayWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY)

  // trayWindow.webContents.openDevTools();

  function toggleWindow() {
    console.log('trayWindow.isVisible()', trayWindow.isVisible())

    if (trayWindow.isVisible()) {
      trayWindow.hide()
    } else {
      trayWindow.show()
    }
  }

  tray.on('click', () => {
    console.log('clicked tray...')
    trayWindow.setPosition(trayBounds.x - 62, trayBounds.y - 60)
    toggleWindow()
  })

  trayWindow.on('closed', () => {
    trayWindow = null
  })

  app.on('activate', () => {
    if (trayWindow === null) createTrayWindow()
  })
}
